# Build stage
FROM node:22-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY apps/api/package*.json ./apps/api/
COPY packages/core/package*.json ./packages/core/

# Install dependencies
RUN npm ci

# Copy source code
COPY . .

# Build the application
WORKDIR /app/apps/api
RUN npm run build

# Runtime stage
FROM node:22-alpine

WORKDIR /app

# Install ffmpeg for audio/video processing
RUN apk add --no-cache ffmpeg

# Copy package files
COPY package*.json ./
COPY apps/api/package*.json ./apps/api/
COPY packages/core/package*.json ./packages/core/

# Install production dependencies only
RUN npm ci --omit=dev

# Copy built application from builder stage
COPY --from=builder /app/apps/api/dist ./apps/api/dist
# Copy core source files (no build needed for core)
COPY packages/core ./packages/core

# Create storage directory for local storage (fallback)
RUN mkdir -p /app/apps/api/storage

# Set environment variables
ENV NODE_ENV=production
ENV STORAGE_TYPE=gcs

WORKDIR /app/apps/api

# Expose the port
EXPOSE 8080

# Run the application
CMD ["node", "dist/index.js"]